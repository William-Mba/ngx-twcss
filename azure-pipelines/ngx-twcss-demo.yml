trigger:
  branches:
    include:
      - master
      - next*
      - dev*
  paths:
    include:
      - src/*
      - azure-pipelines/*demo.yml

pool:
  name: Continuous Integration
  demands:
    - Agent.OS -equals Linux
    - AZP_RUNS -equals ngx-twcss-demo

stages:
  - stage: CI
    jobs:
      - job: Build
        steps:
          - checkout: self
            clean: false
            persistCredentials: true

          - bash: >
              sed "/file\:dist\/ngx-twcss/d" -i package.json;
              branch=${{ variables['Buid.SourceBranchName'] }};
              echo $branch;
              if [[ $branch == "master" ]]; then
                echo "Using ngx-twcss@latest";
                npm install ngx-twcss@latest;
              elif [[ $branch == "next-release" ]]; then
                echo "Using ngx-twcss@next";
                npm install ngx-twcss@next;
              else
                echo "Using ngx-twcss@insiders";
                npm install ngx-twcss@insiders;
              fi;

              if [ -f package-lock.json ]; then
                echo "Removing package-lock.json";
                rm package-lock.json;
              fi;
              npm install
            displayName: "Setup"

          - script: |
              npm run build:demo
            displayName: "Build"

          - publish: $(Build.SourcesDirectory)/dist/ngx-twcss-demo
            artifact: drop
            displayName: "Publish artifact"

  - ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    - stage: CD
      dependsOn: CI
      jobs:
        - job: Release
          steps:
            - checkout: none

            - download: current
              artifact: drop
              displayName: Download build artifact

            - script: |
                # Swap blue/green
                cp -rfp /azp/www/ngx-twcss/green/* /azp/www/ngx-twcss/blue
                # Copy the new release to the green directory
                cp -rfp ./* /azp/www/ngx-twcss/green
              displayName: "Release demo@${{ parameters.ReleaseTag }}"
              workingDirectory: $(Pipeline.Workspace)/drop
