trigger:
  paths:
    include:
      - src/*

pool:
  name: Ngx-twcss
  demands:
    - Agent.OS -equals Linux

parameters:
  - name: ReleaseTag
    displayName: "Release tag"
    type: string
    default: latest
    values:
      - next
      - latest
      - insiders

stages:
  - stage: CI
    jobs:
      - job: Build
        steps:
          - checkout: self
            clean: false
            persistCredentials: true

          - bash: |
              sed "/file\:dist\/ngx-twcss/d" -i package.json

              echo "Using ngx-twcss@${{ parameters.ReleaseTag }}"
              npm install ngx-twcss@${{ parameters.ReleaseTag }}

              if [ -f package-lock.json ]; then echo "Removing package-lock.json"; rm package-lock.json; fi

              npm install
            displayName: "Setup"

          - script: |
              npm run build:demo
            displayName: "Build"

          - publish: $(Build.SourcesDirectory)/dist/ngx-twcss-demo
            artifact: drop
            displayName: "Publish artifact"

  - ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    - stage: CD
      dependsOn: CI
      pool:
        name: Ngx-twcss
        demands:
          - Agent.OS -equals Linux
          - AZP_RUNS -equals ngx-twcss-demo
      jobs:
        - job: Release
          steps:
            - checkout: none

            - download: current
              artifact: drop
              displayName: Download build artifact

            - script: |
                # Swap blue/green
                cp -rfp /azp/www/ngx-twcss/green/* /azp/www/ngx-twcss/blue
                # Copy the new release to the green directory
                cp -rfp ./* /azp/www/ngx-twcss/green
              displayName: "Release ${{ parameters.ReleaseTag }} demo"
              workingDirectory: $(Pipeline.Workspace)/drop
