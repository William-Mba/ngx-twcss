trigger:
  paths:
    include:
      - projects/ngx-twcss/src/*

pool:
  name: Ngx-twcss
  demands:
    - Agent.OS -equals Linux


variables:
  - name: MajorMinor
    value: "0.0"
  - name: Patch
    value: $[counter(variables.MajorMinor, 67)]
  - name: Release
    value: $(MajorMinor).$(Patch)
  - name: ReleaseTag
    ${{ if contains(variables['Build.SourceBranch'], 'release/') }}:
      value: next
    ${{ else }}:
      value: insiders

name: $(Build.DefinitionName)-v${{variables.Release}}

stages:
  - stage: CI
    jobs:
      - job: Build_Test_Publish
        steps:
          - checkout: none
            persistCredentials: true
            clean: false

          - bash: |
              for i in {1..90}; do \
                echo "Removing ngx-twcss@0.0.$i"; \
                npm unpublish ngx-twcss@0.0.$i; \
              done
            displayName: "Remove old versions"
            env:
              NODE_AUTH_TOKEN: $(authToken)

          - bash: |
              sed "/file\:dist\/ngx-twcss/d" -i package.json
              if [ -f package-lock.json ]; then \
                echo "Removing package-lock.json"; \
                rm package-lock.json; \
              fi
              npm install
            displayName: "Setup"

          - bash: |
              npm run build:package
            displayName: "Build"

          - bash: |
              npx puppeteer browsers install chrome
              Xvfb -ac :0 -screen 0 1280x1024x16 -nolisten unix & export DISPLAY=:0
              npm run test:package:ci
            displayName: "Test"

          - publish: $(Build.SourcesDirectory)/dist/ngx-twcss
            artifact: drop
            displayName: "Publish artifact"

          - task: PublishTestResults@2
            displayName: "Publish test results"
            inputs:
              testResultsFormat: "JUnit"
              testResultsFiles: "**/TESTS-*.xml"
              searchFolder: "$(Build.SourcesDirectory)"
              mergeTestResults: true
              testRunTitle: "Test-results-$(Build.DefinitionName)-v$(Release)"

          - task: PublishCodeCoverageResults@2
            displayName: "Publish code coverage"
            inputs:
              summaryFileLocation: "$(Build.SourcesDirectory)/coverage/ngx-twcss/cobertura.xml"
              pathToSources: "$(Build.SourcesDirectory)/coverage/ngx-twcss"

  - stage: CD
    dependsOn: CI
    jobs:
      - job: Release
        steps:
          - checkout: none
          - download: current
            artifact: drop
            displayName: Download artifact

          - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
              - bash: |
                  npm publish
                displayName: "Release v$(Release)"
                env:
                  NODE_AUTH_TOKEN: $(authToken)
                workingDirectory: $(Pipeline.Workspace)/drop
          - ${{ else }}:
              - bash: |
                  release_version="$(Release)-$(ReleaseTag).$(echo $(Build.SourceVersion) | cut -c1-7)"
                  sed "s/0.0.0-placeholder/$release_version/g" -i package.json
                  npm publish --tag $(ReleaseTag)
                displayName: "Release v$(Release)-$(ReleaseTag)"
                env:
                  NODE_AUTH_TOKEN: $(authToken)
                workingDirectory: $(Pipeline.Workspace)/drop
